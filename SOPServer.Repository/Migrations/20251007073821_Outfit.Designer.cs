// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SOPServer.Repository.DBContext;

#nullable disable

namespace SOPServer.Repository.Migrations
{
    [DbContext(typeof(SOPServerContext))]
    [Migration("20251007073821_Outfit")]
    partial class Outfit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Outfit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("isFavorite")
                        .HasColumnType("bit");

                    b.Property<bool>("isUsed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Outfits");
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Category__3214EC071F17A97B");

                    b.HasIndex("ParentId");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.Hashtag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Hashtag__3214EC07");

                    b.ToTable("Hashtag", (string)null);
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.Item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AiDescription")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Color")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Condition")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fabric")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FrequencyWorn")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastWornAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Pattern")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Tag")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("WeatherSuitable")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Item__3214EC0747906DDA");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Item", (string)null);
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.ItemOccasion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OccasionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__ItemOcca__3214EC0770686AD7");

                    b.HasIndex("ItemId");

                    b.HasIndex("OccasionId");

                    b.ToTable("ItemOccasion", (string)null);
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.ItemSeason", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SeasonId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__ItemSeas__3214EC07D4095C08");

                    b.HasIndex("ItemId");

                    b.HasIndex("SeasonId");

                    b.ToTable("ItemSeason", (string)null);
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.ItemStyle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StyleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__ItemStyl__3214EC07C65FA98C");

                    b.HasIndex("ItemId");

                    b.HasIndex("StyleId");

                    b.ToTable("ItemStyle", (string)null);
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.Job", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Job__3214EC07BB559D15");

                    b.ToTable("Job", (string)null);
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.Occasion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Occasion__3214EC07770E08E7");

                    b.ToTable("Occasion", (string)null);
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.OutfitItems", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OutfitId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("OutfitId");

                    b.ToTable("OutfitItems");
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.Post", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Body")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK__Post__3214EC07");

                    b.HasIndex("UserId");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.PostHashtags", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("HashtagId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("PostId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__PostHash__3214EC07");

                    b.HasIndex("HashtagId");

                    b.HasIndex("PostId");

                    b.ToTable("PostHashtags", (string)null);
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.PostImage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("PostId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__PostImag__3214EC07");

                    b.HasIndex("PostId");

                    b.ToTable("PostImage", (string)null);
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.Season", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Season__3214EC07455A7347");

                    b.ToTable("Season", (string)null);
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.Style", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Style__3214EC074BD205BF");

                    b.ToTable("Style", (string)null);
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AvoidedColor")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AvtUrl")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Bio")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly?>("Dob")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFirstTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsLoginWithGoogle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsPremium")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsStylist")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsVerifiedEmail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<long?>("JobId")
                        .HasColumnType("bigint");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PreferedColor")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__User__3214EC0767F70699");

                    b.HasIndex("JobId");

                    b.HasIndex(new[] { "Email" }, "UQ__User__A9D105340DE61212")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.UserStyle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("StyleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK__UserStyl__3214EC07CE37713F");

                    b.HasIndex("StyleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserStyle", (string)null);
                });

            modelBuilder.Entity("Outfit", b =>
                {
                    b.HasOne("SOPServer.Repository.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.Category", b =>
                {
                    b.HasOne("SOPServer.Repository.Entities.Category", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Category_Parent");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.Item", b =>
                {
                    b.HasOne("SOPServer.Repository.Entities.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Item_Category");

                    b.HasOne("SOPServer.Repository.Entities.User", "User")
                        .WithMany("Items")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Item_User");

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.ItemOccasion", b =>
                {
                    b.HasOne("SOPServer.Repository.Entities.Item", "Item")
                        .WithMany("ItemOccasions")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FK_ItemOccasion_Item");

                    b.HasOne("SOPServer.Repository.Entities.Occasion", "Occasion")
                        .WithMany("ItemOccasions")
                        .HasForeignKey("OccasionId")
                        .HasConstraintName("FK_ItemOccasion_Occasion");

                    b.Navigation("Item");

                    b.Navigation("Occasion");
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.ItemSeason", b =>
                {
                    b.HasOne("SOPServer.Repository.Entities.Item", "Item")
                        .WithMany("ItemSeasons")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FK_ItemSeason_Item");

                    b.HasOne("SOPServer.Repository.Entities.Season", "Season")
                        .WithMany("ItemSeasons")
                        .HasForeignKey("SeasonId")
                        .HasConstraintName("FK_ItemSeason_Season");

                    b.Navigation("Item");

                    b.Navigation("Season");
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.ItemStyle", b =>
                {
                    b.HasOne("SOPServer.Repository.Entities.Item", "Item")
                        .WithMany("ItemStyles")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FK_ItemStyle_Item");

                    b.HasOne("SOPServer.Repository.Entities.Style", "Style")
                        .WithMany("ItemStyles")
                        .HasForeignKey("StyleId")
                        .HasConstraintName("FK_ItemStyle_Style");

                    b.Navigation("Item");

                    b.Navigation("Style");
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.OutfitItems", b =>
                {
                    b.HasOne("SOPServer.Repository.Entities.Item", "Item")
                        .WithMany("OutfitItems")
                        .HasForeignKey("ItemId");

                    b.HasOne("Outfit", "Outfit")
                        .WithMany("OutfitItems")
                        .HasForeignKey("OutfitId");

                    b.Navigation("Item");

                    b.Navigation("Outfit");
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.Post", b =>
                {
                    b.HasOne("SOPServer.Repository.Entities.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Post_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.PostHashtags", b =>
                {
                    b.HasOne("SOPServer.Repository.Entities.Hashtag", "Hashtag")
                        .WithMany("PostHashtags")
                        .HasForeignKey("HashtagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PostHashtags_Hashtag");

                    b.HasOne("SOPServer.Repository.Entities.Post", "Post")
                        .WithMany("PostHashtags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PostHashtags_Post");

                    b.Navigation("Hashtag");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.PostImage", b =>
                {
                    b.HasOne("SOPServer.Repository.Entities.Post", "Post")
                        .WithMany("PostImages")
                        .HasForeignKey("PostId")
                        .HasConstraintName("FK_PostImage_Post");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.User", b =>
                {
                    b.HasOne("SOPServer.Repository.Entities.Job", "Job")
                        .WithMany("Users")
                        .HasForeignKey("JobId")
                        .HasConstraintName("FK_User_Job");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.UserStyle", b =>
                {
                    b.HasOne("SOPServer.Repository.Entities.Style", "Style")
                        .WithMany("UserStyles")
                        .HasForeignKey("StyleId")
                        .HasConstraintName("FK_UserStyle_Style");

                    b.HasOne("SOPServer.Repository.Entities.User", "User")
                        .WithMany("UserStyles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserStyle_User");

                    b.Navigation("Style");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Outfit", b =>
                {
                    b.Navigation("OutfitItems");
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.Category", b =>
                {
                    b.Navigation("InverseParent");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.Hashtag", b =>
                {
                    b.Navigation("PostHashtags");
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.Item", b =>
                {
                    b.Navigation("ItemOccasions");

                    b.Navigation("ItemSeasons");

                    b.Navigation("ItemStyles");

                    b.Navigation("OutfitItems");
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.Job", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.Occasion", b =>
                {
                    b.Navigation("ItemOccasions");
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.Post", b =>
                {
                    b.Navigation("PostHashtags");

                    b.Navigation("PostImages");
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.Season", b =>
                {
                    b.Navigation("ItemSeasons");
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.Style", b =>
                {
                    b.Navigation("ItemStyles");

                    b.Navigation("UserStyles");
                });

            modelBuilder.Entity("SOPServer.Repository.Entities.User", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Posts");

                    b.Navigation("UserStyles");
                });
#pragma warning restore 612, 618
        }
    }
}
